meta:
  prog: "ArgCat"
  description: "Description"
  subparser:
    title: "subparsers_title"
    description: "valid subcommands"
    help: "addtional help"
parsers:
  main:
    arguments:
      -
        name_or_flags: ["-t", "--test"]
        nargs: "?"
        dest: "test"
        metavar: "TEST"
        type: "str" # The default type is "str". For this attribute we need to generate the right type from this type string when loading this file.
        help: "Just for test"
  init:
    help: "Initialize a workspaces."
  info:
    help: "Show information of the workspace."
  config:
    help: "Config workspace."
    argument_groups:
      a_group:
        name: "group_name"
        description: "group_description"
        is_mutually_exclusive: true
    arguments:
      -
        name_or_flags: ["-n", "--name"]
        nargs: "?"
        dest: "workspace_name"
        metavar: "WORKSPACE_NAME"
        type: "str" # The default type is "str". For this attribute we need to generate the right type from this type string when loading this file.
        help: "The name of the workspace."
        group: "a_group"
      - 
        name_or_flags: ["-u", "--username"]
        nargs: "?"
        dest: "workspace_user_name"
        metavar: "WORKSPACE_USER_NAME"
        type: "str" # The default type is "str". For this attribute we need to generate the right type from this type string when loading this file.
        help: "The user name of the workspace."
        group: "a_group"
handlers:
  default:  # ArgCat will try to find functions below in __main__
    init: "test1"
    info: "test2"
    main: "test_main"
  foo:  # Custom class/instance/module has the functions for the parsers. This must be set before handling.
    config: "func"